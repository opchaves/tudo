// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: users.sql

package models

import (
	"context"
)

const usersFindByEmail = `-- name: UsersFindByEmail :one
SELECT id, name, email, password FROM users WHERE email = $1
`

func (q *Queries) UsersFindByEmail(ctx context.Context, email string) (*User, error) {
	row := q.db.QueryRow(ctx, usersFindByEmail, email)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Email,
		&i.Password,
	)
	return &i, err
}

const usersInsert = `-- name: UsersInsert :one
INSERT INTO users (name, email, password) VALUES ($1, $2, $3) RETURNING id, name, email, password
`

type UsersInsertParams struct {
	Name     string
	Email    string
	Password string
}

func (q *Queries) UsersInsert(ctx context.Context, arg UsersInsertParams) (*User, error) {
	row := q.db.QueryRow(ctx, usersInsert, arg.Name, arg.Email, arg.Password)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Email,
		&i.Password,
	)
	return &i, err
}
